function [ bestPayoffEngPareto, bestPayoffMotPareto ] = bestparetoNew( paretoStrategies, paretoIndex, ...
	torqueDeviation, requiredTorque, fuelConsRate, fuelConsumed, emissions)  
    torqueDeviationPareto = zeros(size(paretoIndex,1),1);
    fuelConsRatePareto = zeros(size(paretoIndex,1),1);
    emissionsPareto = zeros(size(paretoIndex,1),1);
    final = zeros(size(paretoIndex,1),1);    
   
    minTorqueDeviationPareto = min(torqueDeviation);
   minFuelConsRatePareto = min(fuelConsRate);
   minEmissions = min(emissions);
   
    for r = 1 : size(paretoIndex,1)
        torqueDeviationPareto(r,1) 
        fuelConsumed
        fuelConsRate(r,1)
        emissions(r,1)
        % > half of the required torque
        if torqueDeviation(paretoIndex(r,1), paretoIndex(r,2)) > abs(requiredTorque/2)
            torqueDeviationPareto(r,1) = 0;
        else
            torqueDeviationPareto(r,1) = 1;
        end
        % > 1 liter
        if fuelConsumed > 1
            fuelConsumedPareto = 0;
        else
            fuelConsumedPareto = 1;
        end
        % > 2 gps
        if fuelConsRate(r,1) > 2
            fuelConsRatePareto(r,1) = 0;
        else
            fuelConsRatePareto(r,1) = 1;
        end
        if emissions(r,1) > 0.38
            emissionsPareto(r,1) = 0;
        else
            emissionsPareto(r,1) = 1;
        end
         torqueDeviationPareto(r,1)
        fuelConsumedPareto
        fuelConsRatePareto(r,1)
       
        emissionsPareto(r,1)
        
        fuel = fuelConsumedPareto & fuelConsRatePareto(r,1);
        torqEmis = torqueDeviationPareto(r,1) || emissionsPareto(r,1);
        final = fuel & torqEmis
        r
    end
    bestPayoffEngPareto = paretoStrategies(find(final),1);
    bestPayoffMotPareto = paretoStrategies(find(final),2);
    
end
